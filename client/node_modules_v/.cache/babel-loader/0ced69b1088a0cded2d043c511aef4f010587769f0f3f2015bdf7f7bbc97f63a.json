{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neo\\\\Music\\\\bs\\\\blockchain_project\\\\client\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css'; // Import leaflet styles\nimport '../assets/Dashboard.css'; // Ensure this CSS file exists and is correctly styled\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [nodeCount, setNodeCount] = useState(0);\n  const [transactionCount, setTransactionCount] = useState(0);\n  const [nodes, setNodes] = useState([]); // New state for node data\n\n  useEffect(() => {\n    // Fetch node count from NodesDashboard endpoint\n    axios.get('http://127.0.0.1:5000/get_nodes').then(response => {\n      setNodeCount(response.data.length);\n      // Assuming response.data contains an array of nodes with IP and country info\n      setNodes(response.data);\n    }).catch(error => console.error('Error fetching nodes:', error));\n\n    // Other existing data fetching can be here\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Node Count: \", nodeCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Transaction Count: \", transactionCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [51.505, -0.09],\n      zoom: 2,\n      style: {\n        height: \"500px\",\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), nodes.map((node, index) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: [node.latitude, node.longitude],\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: [\"IP: \", node.ip, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 42\n          }, this), \"Country: \", node.country]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"Ml5Le6LIlq77kOCZo3L2JvIbVuU=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","MapContainer","TileLayer","Marker","Popup","jsxDEV","_jsxDEV","Dashboard","_s","nodeCount","setNodeCount","transactionCount","setTransactionCount","nodes","setNodes","get","then","response","data","length","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","center","zoom","style","height","width","url","attribution","map","node","index","position","latitude","longitude","ip","country","_c","$RefreshReg$"],"sources":["C:/Users/Neo/Music/bs/blockchain_project/client/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { MapContainer, TileLayer, Marker, Popup } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css'; // Import leaflet styles\r\nimport '../assets/Dashboard.css'; // Ensure this CSS file exists and is correctly styled\r\n\r\nconst Dashboard = () => {\r\n    const [nodeCount, setNodeCount] = useState(0);\r\n    const [transactionCount, setTransactionCount] = useState(0);\r\n    const [nodes, setNodes] = useState([]); // New state for node data\r\n\r\n    useEffect(() => {\r\n        // Fetch node count from NodesDashboard endpoint\r\n        axios.get('http://127.0.0.1:5000/get_nodes')\r\n            .then(response => {\r\n                setNodeCount(response.data.length);\r\n                // Assuming response.data contains an array of nodes with IP and country info\r\n                setNodes(response.data);\r\n            })\r\n            .catch(error => console.error('Error fetching nodes:', error));\r\n\r\n        // Other existing data fetching can be here\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            {/* Existing content and components */}\r\n            <h1>Dashboard</h1>\r\n            <div>Node Count: {nodeCount}</div>\r\n            <div>Transaction Count: {transactionCount}</div>\r\n            \r\n            {/* New Map Component */}\r\n            <MapContainer center={[51.505, -0.09]} zoom={2} style={{ height: \"500px\", width: \"100%\" }}>\r\n                <TileLayer\r\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                    attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n                />\r\n                {nodes.map((node, index) => (\r\n                    <Marker key={index} position={[node.latitude, node.longitude]}>\r\n                        <Popup>\r\n                            IP: {node.ip}<br />\r\n                            Country: {node.country}\r\n                        </Popup>\r\n                    </Marker>\r\n                ))}\r\n            </MapContainer>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}