{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neo\\\\Music\\\\bs\\\\blockchain_project\\\\client\\\\src\\\\pages\\\\main.js\";\nimport React, { useState } from \"react\";\nimport UploadButton from \"../components/Button/UploadButton\";\nimport Button from \"../components/Button/Button\";\nimport axios from \"axios\";\nimport \"../assets/main.css\";\nconst Main = () => {\n  const [publicKey, setPublicKey] = useState('');\n  const [file, setFile] = useState('');\n  const [senderAddress, setSenderAddress] = useState('');\n  const [amount, setAmount] = useState('');\n  const [transactionData, setTransactionData] = useState({\n    transactionNumber: 0,\n    additionalInfo: \"\"\n  });\n  const handleFileUpload = event => {\n    var file = event.target.files[0];\n    var reader = new FileReader();\n    reader.onload = function (event) {\n      setFile(event.target.result);\n    };\n    reader.readAsText(file);\n  };\n  const handlePublicKeyUpload = event => {\n    var file = event.target.files[0];\n    var reader = new FileReader();\n    reader.onload = function (event) {\n      setPublicKey(event.target.result);\n    };\n    reader.readAsText(file);\n  };\n  const sendTransaction = async () => {\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"public_key\", publicKey);\n    formData.append(\"sender\", senderAddress);\n    formData.append(\"amount\", amount);\n    formData.append(\"recipient\", publicKey); // Assuming recipient's public key is used as address\n    try {\n      const response = await axios.post(\"http://127.0.0.1:5000/add_transaction\", formData);\n      console.log(\"Transaction sent:\", response.data);\n    } catch (error) {\n      console.error(\"Error sending transaction:\", error);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main__block1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(UploadButton, {\n    text: \"IMPORT A FILE\",\n    action: e => handleFileUpload(e),\n    id: \"input-file1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }), file.length > 0 && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, \"File has successfully been uploaded\"), /*#__PURE__*/React.createElement(UploadButton, {\n    text: \"Upload public key\",\n    action: e => handlePublicKeyUpload(e),\n    id: \"input-file2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }), publicKey.length > 0 && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, \"Public key has successfully been uploaded\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Sender Address\",\n    value: senderAddress,\n    onChange: e => setSenderAddress(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    placeholder: \"Amount\",\n    value: amount,\n    onChange: e => setAmount(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    text: \"Send transaction\",\n    onClick: e => sendTransaction(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    text: \"Generate block\",\n    onClick: e => generateBlock(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  })));\n};\nexport default Main;","map":{"version":3,"names":["React","useState","UploadButton","Button","axios","Main","publicKey","setPublicKey","file","setFile","senderAddress","setSenderAddress","amount","setAmount","transactionData","setTransactionData","transactionNumber","additionalInfo","handleFileUpload","event","target","files","reader","FileReader","onload","result","readAsText","handlePublicKeyUpload","sendTransaction","formData","FormData","append","response","post","console","log","data","error","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","text","action","e","id","length","type","placeholder","value","onChange","required","onClick","generateBlock"],"sources":["C:/Users/Neo/Music/bs/blockchain_project/client/src/pages/main.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport UploadButton from \"../components/Button/UploadButton\";\r\nimport Button from \"../components/Button/Button\";\r\nimport axios from \"axios\";\r\nimport \"../assets/main.css\";\r\n\r\nconst Main = () => {\r\n  const [publicKey, setPublicKey] = useState('');\r\n  const [file, setFile] = useState('');\r\n  const [senderAddress, setSenderAddress] = useState('');\r\n  const [amount, setAmount] = useState('');\r\n  const [transactionData, setTransactionData] = useState({\r\n    transactionNumber: 0,\r\n    additionalInfo: \"\",\r\n  });\r\n\r\n  const handleFileUpload = (event) => {\r\n    var file = event.target.files[0];\r\n    var reader = new FileReader();\r\n    reader.onload = function (event) {\r\n      setFile(event.target.result);\r\n    };\r\n    reader.readAsText(file);\r\n  };\r\n\r\n  const handlePublicKeyUpload = (event) => {\r\n    var file = event.target.files[0];\r\n    var reader = new FileReader();\r\n    reader.onload = function (event) {\r\n      setPublicKey(event.target.result);\r\n    };\r\n    reader.readAsText(file);\r\n  };\r\n\r\n  const sendTransaction = async () => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    formData.append(\"public_key\", publicKey);\r\n    formData.append(\"sender\", senderAddress);\r\n    formData.append(\"amount\", amount);\r\n    formData.append(\"recipient\", publicKey); // Assuming recipient's public key is used as address\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://127.0.0.1:5000/add_transaction\",\r\n        formData\r\n      );\r\n      console.log(\"Transaction sent:\", response.data);\r\n    } catch (error) {\r\n      console.error(\"Error sending transaction:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <div className=\"main__block1\">\r\n        <UploadButton\r\n          text={\"IMPORT A FILE\"}\r\n          action={(e) => handleFileUpload(e)}\r\n          id=\"input-file1\"\r\n        />\r\n        {file.length > 0 && (\r\n          <p className=\"message\">File has successfully been uploaded</p>\r\n        )}\r\n        <UploadButton\r\n          text={\"Upload public key\"}\r\n          action={(e) => handlePublicKeyUpload(e)}\r\n          id=\"input-file2\"\r\n        />\r\n        {publicKey.length > 0 && (\r\n          <p className=\"message\">Public key has successfully been uploaded</p>\r\n        )}\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Sender Address\"\r\n          value={senderAddress}\r\n          onChange={(e) => setSenderAddress(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Amount\"\r\n          value={amount}\r\n          onChange={(e) => setAmount(e.target.value)}\r\n          required\r\n        />\r\n        <Button text={\"Send transaction\"} onClick={(e) => sendTransaction(e)} />\r\n        <Button\r\n          text={\"Generate block\"}\r\n          onClick={(e) => generateBlock(e)}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,YAAY,MAAM,mCAAmC;AAC5D,OAAOC,MAAM,MAAM,6BAA6B;AAChD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,oBAAoB;AAE3B,MAAMC,IAAI,GAAGA,CAAA,KAAM;EACjB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,aAAa,EAAEC,gBAAgB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACW,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACa,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC;IACrDe,iBAAiB,EAAE,CAAC;IACpBC,cAAc,EAAE;EAClB,CAAC,CAAC;EAEF,MAAMC,gBAAgB,GAAIC,KAAK,IAAK;IAClC,IAAIX,IAAI,GAAGW,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAChC,IAAIC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAC7BD,MAAM,CAACE,MAAM,GAAG,UAAUL,KAAK,EAAE;MAC/BV,OAAO,CAACU,KAAK,CAACC,MAAM,CAACK,MAAM,CAAC;IAC9B,CAAC;IACDH,MAAM,CAACI,UAAU,CAAClB,IAAI,CAAC;EACzB,CAAC;EAED,MAAMmB,qBAAqB,GAAIR,KAAK,IAAK;IACvC,IAAIX,IAAI,GAAGW,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAChC,IAAIC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;IAC7BD,MAAM,CAACE,MAAM,GAAG,UAAUL,KAAK,EAAE;MAC/BZ,YAAY,CAACY,KAAK,CAACC,MAAM,CAACK,MAAM,CAAC;IACnC,CAAC;IACDH,MAAM,CAACI,UAAU,CAAClB,IAAI,CAAC;EACzB,CAAC;EAED,MAAMoB,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEvB,IAAI,CAAC;IAC7BqB,QAAQ,CAACE,MAAM,CAAC,YAAY,EAAEzB,SAAS,CAAC;IACxCuB,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAErB,aAAa,CAAC;IACxCmB,QAAQ,CAACE,MAAM,CAAC,QAAQ,EAAEnB,MAAM,CAAC;IACjCiB,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAEzB,SAAS,CAAC,CAAC,CAAC;IACzC,IAAI;MACF,MAAM0B,QAAQ,GAAG,MAAM5B,KAAK,CAAC6B,IAAI,CAC/B,uCAAuC,EACvCJ,QACF,CAAC;MACDK,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEH,QAAQ,CAACI,IAAI,CAAC;IACjD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF,CAAC;EAED,oBACErC,KAAA,CAAAsC,aAAA;IAAKC,SAAS,EAAC,MAAM;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACnB7C,KAAA,CAAAsC,aAAA;IAAKC,SAAS,EAAC,cAAc;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC3B7C,KAAA,CAAAsC,aAAA,CAACpC,YAAY;IACX4C,IAAI,EAAE,eAAgB;IACtBC,MAAM,EAAGC,CAAC,IAAK9B,gBAAgB,CAAC8B,CAAC,CAAE;IACnCC,EAAE,EAAC,aAAa;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACjB,CAAC,EACDrC,IAAI,CAAC0C,MAAM,GAAG,CAAC,iBACdlD,KAAA,CAAAsC,aAAA;IAAGC,SAAS,EAAC,SAAS;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,qCAAsC,CAC9D,eACD7C,KAAA,CAAAsC,aAAA,CAACpC,YAAY;IACX4C,IAAI,EAAE,mBAAoB;IAC1BC,MAAM,EAAGC,CAAC,IAAKrB,qBAAqB,CAACqB,CAAC,CAAE;IACxCC,EAAE,EAAC,aAAa;IAAAT,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACjB,CAAC,EACDvC,SAAS,CAAC4C,MAAM,GAAG,CAAC,iBACnBlD,KAAA,CAAAsC,aAAA;IAAGC,SAAS,EAAC,SAAS;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,2CAA4C,CACpE,eACD7C,KAAA,CAAAsC,aAAA;IACEa,IAAI,EAAC,MAAM;IACXC,WAAW,EAAC,gBAAgB;IAC5BC,KAAK,EAAE3C,aAAc;IACrB4C,QAAQ,EAAGN,CAAC,IAAKrC,gBAAgB,CAACqC,CAAC,CAAC5B,MAAM,CAACiC,KAAK,CAAE;IAClDE,QAAQ;IAAAf,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACT,CAAC,eACF7C,KAAA,CAAAsC,aAAA;IACEa,IAAI,EAAC,QAAQ;IACbC,WAAW,EAAC,QAAQ;IACpBC,KAAK,EAAEzC,MAAO;IACd0C,QAAQ,EAAGN,CAAC,IAAKnC,SAAS,CAACmC,CAAC,CAAC5B,MAAM,CAACiC,KAAK,CAAE;IAC3CE,QAAQ;IAAAf,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CACT,CAAC,eACF7C,KAAA,CAAAsC,aAAA,CAACnC,MAAM;IAAC2C,IAAI,EAAE,kBAAmB;IAACU,OAAO,EAAGR,CAAC,IAAKpB,eAAe,CAACoB,CAAC,CAAE;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACxE7C,KAAA,CAAAsC,aAAA,CAACnC,MAAM;IACL2C,IAAI,EAAE,gBAAiB;IACvBU,OAAO,EAAGR,CAAC,IAAKS,aAAa,CAACT,CAAC,CAAE;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAClC,CACE,CACF,CAAC;AAEV,CAAC;AAED,eAAexC,IAAI"},"metadata":{},"sourceType":"module"}