{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neo\\\\Music\\\\bs\\\\blockchain_project\\\\client\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../assets/Dashboard.css'; // Ensure this CSS file exists and is correctly styled\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction IPInfo() {\n  _s();\n  const [ipAddress, setIpAddress] = useState('');\n  const [country, setCountry] = useState('');\n  const [loading, setLoading] = useState(false);\n  const fetchCountryInfo = async () => {\n    setLoading(true);\n    try {\n      const response = await axios.get(`https://ipinfo.io/${ipAddress}/json`);\n      const data = response.data;\n      const countryName = data.country || 'Unknown';\n      setCountry(countryName);\n    } catch (error) {\n      console.error('Error fetching country information:', error);\n      setCountry('Error');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"IP Country Finder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Enter an IP Address: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: ipAddress,\n        onChange: e => setIpAddress(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchCountryInfo,\n        children: \"Find Country\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Country: \", country]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(IPInfo, \"ZTSrAfOc9HyMsRmbCtliIzsM9TA=\");\n_c = IPInfo;\nconst Dashboard = () => {\n  _s2();\n  const [nodeCount, setNodeCount] = useState(0);\n  const [transactionCount, setTransactionCount] = useState(0);\n  useEffect(() => {\n    // Fetch node count from NodesDashboard endpoint\n    axios.get('http://127.0.0.1:5000/get_nodes').then(response => setNodeCount(response.data.nodes.length)).catch(error => console.error('Error fetching nodes:', error));\n\n    // Fetch transaction count from lists endpoint\n    axios.get(\"http://localhost:5000/get_chain\").then(response => {\n      const transactions = response.data.chain.flatMap(block => block.transactions);\n      setTransactionCount(transactions.length);\n    }).catch(error => console.error('Error fetching transactions:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-item animated\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Registered Nodes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"count\",\n        children: nodeCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-item animated\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Transactions Occurred\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"count\",\n        children: transactionCount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n};\n_s2(Dashboard, \"n5S3t5L+4ovL7Gof+13Gh5dk3zE=\");\n_c2 = Dashboard;\nexport default Dashboard;\nvar _c, _c2;\n$RefreshReg$(_c, \"IPInfo\");\n$RefreshReg$(_c2, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","IPInfo","_s","ipAddress","setIpAddress","country","setCountry","loading","setLoading","fetchCountryInfo","response","get","data","countryName","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onClick","_c","Dashboard","_s2","nodeCount","setNodeCount","transactionCount","setTransactionCount","then","nodes","length","catch","transactions","chain","flatMap","block","className","_c2","$RefreshReg$"],"sources":["C:/Users/Neo/Music/bs/blockchain_project/client/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport '../assets/Dashboard.css'; // Ensure this CSS file exists and is correctly styled\r\n\r\nfunction IPInfo() {\r\n  const [ipAddress, setIpAddress] = useState('');\r\n  const [country, setCountry] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const fetchCountryInfo = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.get(`https://ipinfo.io/${ipAddress}/json`);\r\n      const data = response.data;\r\n      const countryName = data.country || 'Unknown';\r\n      setCountry(countryName);\r\n    } catch (error) {\r\n      console.error('Error fetching country information:', error);\r\n      setCountry('Error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>IP Country Finder</h1>\r\n      <div>\r\n        <label>Enter an IP Address: </label>\r\n        <input\r\n          type=\"text\"\r\n          value={ipAddress}\r\n          onChange={(e) => setIpAddress(e.target.value)}\r\n        />\r\n        <button onClick={fetchCountryInfo}>Find Country</button>\r\n      </div>\r\n      <div>\r\n        {loading ? (\r\n          <p>Loading...</p>\r\n        ) : (\r\n          <p>Country: {country}</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Dashboard = () => {\r\n    const [nodeCount, setNodeCount] = useState(0);\r\n    const [transactionCount, setTransactionCount] = useState(0);\r\n\r\n    useEffect(() => {\r\n        // Fetch node count from NodesDashboard endpoint\r\n        axios.get('http://127.0.0.1:5000/get_nodes')\r\n            .then(response => setNodeCount(response.data.nodes.length))\r\n            .catch(error => console.error('Error fetching nodes:', error));\r\n\r\n        // Fetch transaction count from lists endpoint\r\n        axios.get(\"http://localhost:5000/get_chain\")\r\n            .then(response => {\r\n                const transactions = response.data.chain.flatMap(block => block.transactions);\r\n                setTransactionCount(transactions.length);\r\n            })\r\n            .catch(error => console.error('Error fetching transactions:', error));\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"dashboard\">\r\n            <div className=\"dashboard-item animated\">\r\n                <h2>Registered Nodes</h2>\r\n                <p className=\"count\">{nodeCount}</p>\r\n            </div>\r\n            <div className=\"dashboard-item animated\">\r\n                <h2>Transactions Occurred</h2>\r\n                <p className=\"count\">{transactionCount}</p>\r\n            </div>\r\n            {/* Add more dashboard items as needed */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,yBAAyB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMa,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnCD,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAE,qBAAoBR,SAAU,OAAM,CAAC;MACvE,MAAMS,IAAI,GAAGF,QAAQ,CAACE,IAAI;MAC1B,MAAMC,WAAW,GAAGD,IAAI,CAACP,OAAO,IAAI,SAAS;MAC7CC,UAAU,CAACO,WAAW,CAAC;IACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qCAAqC,EAAEA,KAAK,CAAC;MAC3DR,UAAU,CAAC,OAAO,CAAC;IACrB,CAAC,SAAS;MACRE,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACER,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BpB,OAAA;MAAAgB,QAAA,gBACEhB,OAAA;QAAAgB,QAAA,EAAO;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpCpB,OAAA;QACEqB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEnB,SAAU;QACjBoB,QAAQ,EAAGC,CAAC,IAAKpB,YAAY,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC,eACFpB,OAAA;QAAQ0B,OAAO,EAAEjB,gBAAiB;QAAAO,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrD,CAAC,eACNpB,OAAA;MAAAgB,QAAA,EACGT,OAAO,gBACNP,OAAA;QAAAgB,QAAA,EAAG;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAEjBpB,OAAA;QAAAgB,QAAA,GAAG,WAAS,EAACX,OAAO;MAAA;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IACzB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAAClB,EAAA,CAzCQD,MAAM;AAAA0B,EAAA,GAAN1B,MAAM;AA2Cf,MAAM2B,SAAS,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACpB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGnC,QAAQ,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACoC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGrC,QAAQ,CAAC,CAAC,CAAC;EAE3DC,SAAS,CAAC,MAAM;IACZ;IACAC,KAAK,CAACa,GAAG,CAAC,iCAAiC,CAAC,CACvCuB,IAAI,CAACxB,QAAQ,IAAIqB,YAAY,CAACrB,QAAQ,CAACE,IAAI,CAACuB,KAAK,CAACC,MAAM,CAAC,CAAC,CAC1DC,KAAK,CAACvB,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CAAC;;IAElE;IACAhB,KAAK,CAACa,GAAG,CAAC,iCAAiC,CAAC,CACvCuB,IAAI,CAACxB,QAAQ,IAAI;MACd,MAAM4B,YAAY,GAAG5B,QAAQ,CAACE,IAAI,CAAC2B,KAAK,CAACC,OAAO,CAACC,KAAK,IAAIA,KAAK,CAACH,YAAY,CAAC;MAC7EL,mBAAmB,CAACK,YAAY,CAACF,MAAM,CAAC;IAC5C,CAAC,CAAC,CACDC,KAAK,CAACvB,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC,CAAC;EAC7E,CAAC,EAAE,EAAE,CAAC;EAEN,oBACId,OAAA;IAAK0C,SAAS,EAAC,WAAW;IAAA1B,QAAA,gBACtBhB,OAAA;MAAK0C,SAAS,EAAC,yBAAyB;MAAA1B,QAAA,gBACpChB,OAAA;QAAAgB,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBpB,OAAA;QAAG0C,SAAS,EAAC,OAAO;QAAA1B,QAAA,EAAEc;MAAS;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eACNpB,OAAA;MAAK0C,SAAS,EAAC,yBAAyB;MAAA1B,QAAA,gBACpChB,OAAA;QAAAgB,QAAA,EAAI;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9BpB,OAAA;QAAG0C,SAAS,EAAC,OAAO;QAAA1B,QAAA,EAAEgB;MAAgB;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEd,CAAC;AAACS,GAAA,CAhCID,SAAS;AAAAe,GAAA,GAATf,SAAS;AAkCf,eAAeA,SAAS;AAAC,IAAAD,EAAA,EAAAgB,GAAA;AAAAC,YAAA,CAAAjB,EAAA;AAAAiB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}