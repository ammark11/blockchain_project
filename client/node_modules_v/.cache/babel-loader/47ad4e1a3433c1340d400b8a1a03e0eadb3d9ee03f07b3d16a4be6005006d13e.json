{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neo\\\\Music\\\\bs\\\\blockchain_project\\\\client\\\\src\\\\pages\\\\lists.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Table } from \"../components/Table\";\nimport '../assets/lists.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Lists = () => {\n  _s();\n  const [blocks, setBlocks] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const response = await fetch(\"http://localhost:5000/get_chain\");\n      const result = await response.json();\n      if (result) setBlocks(result.chain);\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lists\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lists__search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lists__table\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        colNames: ['INDEX', 'MINER', 'HASH', 'DATE AND TIME', 'NUMBER OF TRANSACTIONS', 'NONCE', 'SENDER', 'RECIPIENT'],\n        data: blocks,\n        type: \"block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(Lists, \"EnmQnMllSQUThE3/m+b9p1neh+g=\");\n_c = Lists;\nexport default Lists;\nvar _c;\n$RefreshReg$(_c, \"Lists\");","map":{"version":3,"names":["React","useEffect","useState","Table","jsxDEV","_jsxDEV","Lists","_s","blocks","setBlocks","fetchData","response","fetch","result","json","chain","className","children","fileName","_jsxFileName","lineNumber","columnNumber","colNames","data","type","_c","$RefreshReg$"],"sources":["C:/Users/Neo/Music/bs/blockchain_project/client/src/pages/lists.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Table } from \"../components/Table\";\r\nimport '../assets/lists.css';\r\n\r\nconst Lists = () => {\r\n  const [blocks, setBlocks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const response = await fetch(\"http://localhost:5000/get_chain\");\r\n      const result = await response.json();\r\n      if (result) setBlocks(result.chain);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"lists\">\r\n      <div className=\"lists__search\"></div>\r\n      <div className=\"lists__table\">\r\n        <Table \r\n          colNames={['INDEX', 'MINER', 'HASH', 'DATE AND TIME', 'NUMBER OF TRANSACTIONS', 'NONCE', 'SENDER', 'RECIPIENT']} \r\n          data={blocks} \r\n          type=\"block\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Lists;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,KAAK,QAAQ,qBAAqB;AAC3C,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAExCD,SAAS,CAAC,MAAM;IACd,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,CAAC;MAC/D,MAAMC,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MACpC,IAAID,MAAM,EAAEJ,SAAS,CAACI,MAAM,CAACE,KAAK,CAAC;IACrC,CAAC;IACDL,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKW,SAAS,EAAC,OAAO;IAAAC,QAAA,gBACpBZ,OAAA;MAAKW,SAAS,EAAC;IAAe;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACrChB,OAAA;MAAKW,SAAS,EAAC,cAAc;MAAAC,QAAA,eAC3BZ,OAAA,CAACF,KAAK;QACJmB,QAAQ,EAAE,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,eAAe,EAAE,wBAAwB,EAAE,OAAO,EAAE,QAAQ,EAAE,WAAW,CAAE;QAChHC,IAAI,EAAEf,MAAO;QACbgB,IAAI,EAAC;MAAO;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACb;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACd,EAAA,CAxBID,KAAK;AAAAmB,EAAA,GAALnB,KAAK;AA0BX,eAAeA,KAAK;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}