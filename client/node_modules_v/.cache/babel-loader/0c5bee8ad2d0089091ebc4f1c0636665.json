{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neo\\\\Music\\\\bs\\\\blockchain_project\\\\client\\\\src\\\\pages\\\\main.js\";\nimport React, { useEffect, useState } from \"react\";\nimport UploadButton from \"../components/Button/UploadButton\";\nimport Button from \"../components/Button/Button\";\nimport axios from \"axios\";\n// import { Table } from '../components/Table';\nimport \"../assets/main.css\";\nconst Main = () => {\n  const [publicKey, setPublicKey] = useState({});\n  const [file, setFile] = useState({});\n  const [transactionData, setTransactionData] = useState({\n    transactionNumber: 0,\n    additionalInfo: \"\"\n  });\n  const handleFileUpload = event => {\n    var file = event.target.files[0];\n    var reader = new FileReader();\n    reader.onload = function (event) {\n      // The file's text will be printed here\n      console.log(event.target.result);\n      setFile(event.target.result);\n    };\n    reader.readAsText(file);\n  };\n  const handlePublicKeyUpload = event => {\n    var file = event.target.files[0];\n    var reader = new FileReader();\n    reader.onload = function (event) {\n      // The file's text will be printed here      console.log(event.target.result);\n      setPublicKey(event.target.result);\n    };\n    reader.readAsText(file);\n  };\n  const handlePrivateKeyUpload = event => {\n    const uploadedPublicKey = event.target.files[0];\n    setPublicKey(uploadedPublicKey);\n  };\n  const sendTransaction = async () => {\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    formData.append(\"transactionNumber\", transactionData.transactionNumber);\n    formData.append(\"add_info\", \"Test\");\n    formData.append(\"file\", file);\n    formData.append(\"public_key\", publicKey);\n    formData.append(\"sender\", senderAddress);\n    formData.append(\"amount\", amount);\n    formData.append(\"recipient\", publicKey);\n    try {\n      const response = await axios.post(\"http://127.0.0.1:5000/add_transaction\", formData);\n      console.log(\"Transaction sent:\", response.data);\n    } catch (error) {\n      console.error(\"Error sending transaction:\", error);\n    }\n  };\n  const generateBlock = async () => {\n    try {\n      const response = await axios.get(\"http://127.0.0.1:5000/mine_block\");\n      console.log(\"New block generated:\", response.data);\n    } catch (error) {\n      console.error(\"Error generating block:\", error);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main__block1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(UploadButton, {\n    text: \"IMPORT A FILE\",\n    action: e => handleFileUpload(e),\n    id: \"input-file1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), file.length > 0 && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \"File has successfully been uploaded\"), /*#__PURE__*/React.createElement(UploadButton, {\n    text: \"Upload public key\",\n    action: e => handlePublicKeyUpload(e),\n    id: \"input-file2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }), publicKey.length > 0 && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, \"Public key has successfully been uploaded\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Sender Address\",\n    value: senderAddress,\n    onChange: e => setSenderAddress(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    placeholder: \"Amount\",\n    value: amount,\n    onChange: e => setAmount(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    text: \"Send transaction\",\n    onClick: e => sendTransaction(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    text: \"Generate block\",\n    onClick: e => generateBlock(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  })));\n};\nexport default Main;","map":{"version":3,"names":["React","useEffect","useState","UploadButton","Button","axios","Main","publicKey","setPublicKey","file","setFile","transactionData","setTransactionData","transactionNumber","additionalInfo","handleFileUpload","event","target","files","reader","FileReader","onload","console","log","result","readAsText","handlePublicKeyUpload","handlePrivateKeyUpload","uploadedPublicKey","sendTransaction","formData","FormData","append","senderAddress","amount","response","post","data","error","generateBlock","get","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","text","action","e","id","length","type","placeholder","value","onChange","setSenderAddress","required","setAmount","onClick"],"sources":["C:/Users/Neo/Music/bs/blockchain_project/client/src/pages/main.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport UploadButton from \"../components/Button/UploadButton\";\r\nimport Button from \"../components/Button/Button\";\r\nimport axios from \"axios\";\r\n// import { Table } from '../components/Table';\r\nimport \"../assets/main.css\";\r\nconst Main = () => {\r\n  const [publicKey, setPublicKey] = useState({});\r\n  const [file, setFile] = useState({});\r\n  const [transactionData, setTransactionData] = useState({\r\n    transactionNumber: 0,\r\n    additionalInfo: \"\",\r\n  });\r\n  const handleFileUpload = (event) => {\r\n    var file = event.target.files[0];\r\n    var reader = new FileReader();\r\n    reader.onload = function (event) {\r\n      // The file's text will be printed here\r\n      console.log(event.target.result);\r\n      setFile(event.target.result);\r\n    };\r\n    reader.readAsText(file);\r\n  };\r\n  const handlePublicKeyUpload = (event) => {\r\n    var file = event.target.files[0];\r\n    var reader = new FileReader();\r\n    reader.onload = function (event) {\r\n      // The file's text will be printed here      console.log(event.target.result);\r\n      setPublicKey(event.target.result);\r\n    };\r\n\r\n    reader.readAsText(file);\r\n  };\r\n  \r\n  const handlePrivateKeyUpload = (event) => {\r\n    const uploadedPublicKey = event.target.files[0];\r\n    setPublicKey(uploadedPublicKey);\r\n  };\r\n  const sendTransaction = async () => {\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n    formData.append(\"transactionNumber\", transactionData.transactionNumber);\r\n    formData.append(\"add_info\", \"Test\");\r\n    formData.append(\"file\", file);\r\n    formData.append(\"public_key\", publicKey);\r\n    formData.append(\"sender\", senderAddress);\r\n    formData.append(\"amount\", amount);\r\n    formData.append(\"recipient\", publicKey);\r\n    try {\r\n      const response = await axios.post(\r\n        \"http://127.0.0.1:5000/add_transaction\",\r\n        formData\r\n      );\r\n      console.log(\"Transaction sent:\", response.data);\r\n    } catch (error) {\r\n      console.error(\"Error sending transaction:\", error);\r\n    }\r\n  };\r\n  const generateBlock = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://127.0.0.1:5000/mine_block\");\r\n      console.log(\"New block generated:\", response.data);\r\n    } catch (error) {\r\n      console.error(\"Error generating block:\", error);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"main\">\r\n      <div className=\"main__block1\">\r\n        <UploadButton\r\n          text={\"IMPORT A FILE\"}\r\n          action={(e) => handleFileUpload(e)}\r\n          id=\"input-file1\"\r\n        />\r\n        {file.length > 0 && (\r\n          <p className=\"message\">File has successfully been uploaded</p>\r\n        )}\r\n        <UploadButton\r\n          text={\"Upload public key\"}\r\n          action={(e) => handlePublicKeyUpload(e)}\r\n          id=\"input-file2\"\r\n        />\r\n        {publicKey.length > 0 && (\r\n          <p className=\"message\">Public key has successfully been uploaded</p>\r\n        )}\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Sender Address\"\r\n          value={senderAddress}\r\n          onChange={(e) => setSenderAddress(e.target.value)}\r\n          required\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Amount\"\r\n          value={amount}\r\n          onChange={(e) => setAmount(e.target.value)}\r\n          required\r\n        />\r\n        <Button text={\"Send transaction\"} onClick={(e) => sendTransaction(e)} />\r\n        <Button\r\n          text={\"Generate block\"}\r\n          onClick={(e) => generateBlock(e)}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Main;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}