{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Neo\\\\Music\\\\bs\\\\blockchain_project\\\\client\\\\src\\\\NodesDashboard.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nconst NodesDashboard = () => {\n  const [nodes, setNodes] = useState([]);\n  useEffect(() => {\n    const fetchNodes = async () => {\n      try {\n        const response = await axios.get('http://127.0.0.1:5000/get_nodes');\n        setNodes(response.data.nodes);\n      } catch (error) {\n        console.error('Error fetching nodes.');\n      }\n    };\n    fetchNodes();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }\n  }, \"Registered Nodes\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, nodes.map((node, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 21\n    }\n  }, node))));\n};\nexport default NodesDashboard;","map":{"version":3,"names":["React","useState","useEffect","axios","NodesDashboard","nodes","setNodes","fetchNodes","response","get","data","error","console","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","node","index","key"],"sources":["C:/Users/Neo/Music/bs/blockchain_project/client/src/NodesDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst NodesDashboard = () => {\r\n    const [nodes, setNodes] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const fetchNodes = async () => {\r\n            try {\r\n                const response = await axios.get('http://127.0.0.1:5000/get_nodes');\r\n                setNodes(response.data.nodes);\r\n            } catch (error) {\r\n                console.error('Error fetching nodes.');\r\n            }\r\n        };\r\n\r\n        fetchNodes();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <h2>Registered Nodes</h2>\r\n            <ul>\r\n                {nodes.map((node, index) => (\r\n                    <li key={index}>{node}</li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NodesDashboard;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,cAAc,GAAGA,CAAA,KAAM;EACzB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACZ,MAAMK,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,iCAAiC,CAAC;QACnEH,QAAQ,CAACE,QAAQ,CAACE,IAAI,CAACL,KAAK,CAAC;MACjC,CAAC,CAAC,OAAOM,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,uBAAuB,CAAC;MAC1C;IACJ,CAAC;IAEDJ,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIP,KAAA,CAAAa,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACInB,KAAA,CAAAa,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,kBAAoB,CAAC,eACzBnB,KAAA,CAAAa,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACKd,KAAK,CAACe,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACnBtB,KAAA,CAAAa,aAAA;IAAIU,GAAG,EAAED,KAAM;IAAAR,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEE,IAAS,CAC7B,CACD,CACH,CAAC;AAEd,CAAC;AAED,eAAejB,cAAc"},"metadata":{},"sourceType":"module"}